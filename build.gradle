plugins {
  id 'java'
  id 'checkstyle'
  id 'jacoco'
  id "org.sonarqube" version "3.0"
}

group = 'cn.ac.bmi'
version = '0.0.1-SNAPSHOT'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
  compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.2'
  compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
  compile group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.12'

  testImplementation 'org.testng:testng:6.14.3'
}

checkstyle {
  toolVersion = '8.39'
  configFile = project(':').file('config/checkstyle/checkstyle.xml')
  configProperties = [ "suppressionFile" : project(':').file('config/checkstyle/suppressions.xml')]
}

compileJava {
  sourceCompatibility = 11  // can be switched to 11 for testing
  targetCompatibility = 11
  options.encoding = "UTF-8"
}

compileTestJava {
  sourceCompatibility = 11  // can be switched to 11 for testing
  targetCompatibility = 11
  options.encoding = "UTF-8"
  options.compilerArgs += "-parameters"
}

test {
  useTestNG() {
    useDefaultListeners = true
  }

  testLogging {
    events "failed" //, "passed", "skipped", "standardOut", "standardError"
    afterSuite { desc, result ->
      if (!desc.parent) {
        println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
      }
    }
  }
}

jacocoTestReport {
  reports {
    xml.enabled = true
  }
}

sonarqube {
  properties {
    property 'sonar.host.url', 'https://sonarcloud.io'
    property "sonar.organization", "cloudphr"
    property "sonar.projectKey", "cloudphr_mindmap"
    property "sonar.sourceEncoding", "UTF-8"
    property 'sonar.jacoco.reportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
  }
}

tasks['jacocoTestReport'].dependsOn test
tasks['sonarqube'].dependsOn jacocoTestReport

